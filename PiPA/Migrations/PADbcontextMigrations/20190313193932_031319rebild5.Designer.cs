// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiPA.Data;

namespace PiPA.Migrations.PADbcontextMigrations
{
    [DbContext(typeof(PADbcontext))]
    [Migration("20190313193932_031319rebild5")]
    partial class _031319rebild5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PiPA.Models.Lists", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ListName");

                    b.Property<string>("UserID");

                    b.HasKey("ID");

                    b.ToTable("ListsTable");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ListName = "ToDo",
                            UserID = "1"
                        });
                });

            modelBuilder.Entity("PiPA.Models.Tasks", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CompletedDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<string>("Description");

                    b.Property<bool>("IsComplete");

                    b.Property<int>("ListID");

                    b.Property<DateTime>("PlannedDateComplete");

                    b.Property<string>("TaskName");

                    b.HasKey("ID");

                    b.ToTable("TasksTable");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CompletedDate = new DateTime(2019, 3, 8, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2019, 3, 1, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mow the lawn description",
                            IsComplete = false,
                            ListID = 1,
                            PlannedDateComplete = new DateTime(2019, 3, 7, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskName = "Mow the Lawn"
                        },
                        new
                        {
                            ID = 2,
                            CompletedDate = new DateTime(2019, 3, 11, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2019, 3, 11, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Do the Dishes description",
                            IsComplete = false,
                            ListID = 1,
                            PlannedDateComplete = new DateTime(2019, 3, 11, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskName = "Do the Dishes"
                        },
                        new
                        {
                            ID = 3,
                            CompletedDate = new DateTime(2019, 3, 18, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            DateCreated = new DateTime(2019, 3, 10, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Go Grocery Shopping description",
                            IsComplete = false,
                            ListID = 1,
                            PlannedDateComplete = new DateTime(2019, 3, 18, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            TaskName = "Go Grocery Shopping"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
